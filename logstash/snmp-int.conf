### Uses if & ifxmibs, poe separate
### Enrich as necessary with Asset info / hostname etc

input {
    snmp {
        hosts => [
            { host => "udp:192.168.1.1/161" community => "${SNMP_RO}" },
            { host => "udp:192.168.1.2/161" community => "${SNMP_RO}" },
            { host => "udp:192.168.1.3/161" community => "${SNMP_RO}" },
            { host => "udp:192.168.1.4/161" community => "${SNMP_RO}" },
            { host => "udp:192.168.1.5/161" community => "${SNMP_RO}" },
            { host => "udp:192.168.1.6/161" community => "${SNMP_RO}" },
            { host => "udp:192.168.1.7/161" community => "${SNMP_RO}" }
            ]
        tables => [
            ## ifmib & ifxMib Stats
            {   "name" => "interfaces"
                "columns" => [  
                   ##IFMib
                    "1.3.6.1.2.1.2.2.1.1",
                    "1.3.6.1.2.1.2.2.1.2",
                    "1.3.6.1.2.1.2.2.1.3",
                    "1.3.6.1.2.1.2.2.1.4",
                    "1.3.6.1.2.1.2.2.1.6",
                    "1.3.6.1.2.1.2.2.1.7",
                    "1.3.6.1.2.1.2.2.1.8",
                    "1.3.6.1.2.1.2.2.1.9",
                    "1.3.6.1.2.1.2.2.1.10",
                    "1.3.6.1.2.1.2.2.1.11",
                    "1.3.6.1.2.1.2.2.1.12",
                    "1.3.6.1.2.1.2.2.1.13",
                    "1.3.6.1.2.1.2.2.1.14",
                    "1.3.6.1.2.1.2.2.1.15",
                    "1.3.6.1.2.1.2.2.1.16",
                    "1.3.6.1.2.1.2.2.1.17",
                    "1.3.6.1.2.1.2.2.1.18",  
                    "1.3.6.1.2.1.2.2.1.19", 
                    "1.3.6.1.2.1.2.2.1.20", 
                    "1.3.6.1.2.1.2.2.1.21",
                    "1.3.6.1.2.1.2.2.1.22", 
                    ##IFxMib
                    "1.3.6.1.2.1.31.1.1.1.1",
                    "1.3.6.1.2.1.31.1.1.1.15",
                    "1.3.6.1.2.1.31.1.1.1.16",
                    "1.3.6.1.2.1.31.1.1.1.18"
                ]
            }
        ]
        ## the standard logstash install should have the mibs for these items
        ## this will keep the last 3 mib names
        oid_path_length => 3
        interval => 60
    }
}

filter {
    mutate {
        ## Add basic ECS fields
        add_field => {
            "[event][kind]" => "metric" 
            "[event][category]" => "host" 
            "[event][type]" => "info" 
            "[event][dataset]" => "interface"
            "[event][module]" => "snmp"
            "[agent][type]" => "logstash"
            "[agent][version]" => "7.15.0"
            "[agent][name]" => "vault"
            "[agent][ip]" => "192.168.1.50"
        }
        rename => {
            "[host]" => "[host][ip]"
        }
    }   

    split { field => "interfaces" }

    mutate {
        rename => {
            "[interfaces][ifXEntry.ifHighSpeed]" => "[interface][speed]"
            "[interfaces][ifXEntry.ifAlias]" => "[interface][description]"
            "[interfaces][ifXEntry.ifPromiscuousMode]" => "[interface][promiscuous]"
            "[interfaces][ifXEntry.ifName]" => "[interface][alias]"
            "[interfaces][ifEntry.ifInDiscards]" => "[interface][discards][in]"
            "[interfaces][ifEntry.ifInUnknownProtos]" => "[interface][unknown_protocols][in]"
            "[interfaces][ifEntry.ifOutErrors]" => "[interface][errors][out]"
            "[interfaces][ifEntry.ifOutDiscards]" => "[interface][discards][out]"
            "[interfaces][ifEntry.ifOperStatus]" => "[interface][up]"
            "[interfaces][ifEntry.ifAdminStatus]" => "[interface][enabled]"
            "[interfaces][ifEntry.ifInErrors]" => "[interface][errors][in]"
            "[interfaces][ifEntry.ifOutUcastPkts]" => "[interface][packets][unicast][out]"
            "[interfaces][ifEntry.ifMtu]" => "[interface][mtu]"
            "[interfaces][ifEntry.ifOutOctets]" => "[interface][bytes][out]"
            "[interfaces][ifEntry.ifInOctets]" => "[interface][bytes][in]"
            "[interfaces][ifEntry.ifLastChange]" => "[interface][last_changed]"
            "[interfaces][ifEntry.ifInUcastPkts]" => "[interface][packets][unicast][in]"
            "[interfaces][ifEntry.ifType]" => "[interface][type]"
            "[interfaces][ifEntry.ifPhysAddress]" => "[interface][mac]"
            "[interfaces][ifEntry.ifDescr]" => "[interface][name]"
            "[interfaces][ifEntry.ifIndex]" => "[interface][index]"
            "[interfaces][ifEntry.ifInNUcastPkts]" => "[interface][packets][non-unicast][in]"
            "[interfaces][ifEntry.ifOutNUcastPkts]" => "[interface][packets][non-unicast][out]"
            "[interfaces][ifEntry.ifOutQLen]" => "[interface][queue_length_out]"
        }
        remove_field => [ "interfaces" ]
    }
    
    ## Conver SNMP 1/2 to boolean
    if [interface][enabled] == 1 {
        mutate { replace => { "[interface][enabled]" => true } }
    }
    else {
        mutate { replace => { "[interface][enabled]" => false } }
    }

    if [interface][up] == 1 {
        mutate { replace => { "[interface][up]" => true } }
    }
    else {
        mutate { replace => { "[interface][up]" => false } }
    }

    if [interface][promiscuous] == 1 {
        mutate { replace => { "[interface][promiscuous]" => true } }
    }
    else {
        mutate { replace => { "[interface][promiscuous]" => false } }
    }
}


output {
    ## debug
        file {
           path => "/tmp/logstash/snmp-ints.json"
        }
        
    ## log errors - should be more specific to look for failure / error, etc.
    if [tags] {
        file {
           path => "/var/log/logstash/snmp-poe-errors.json"
        }
    }
    ## ES output
    elasticsearch {
        hosts => "${ES_URL}"
        user => "${ES_USER}"
        password => "${ES_PW}"
        index => "snmp"
    }
}
